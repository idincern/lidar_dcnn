* Graduation Timeline
** Timeline
*** [06/14/2017] W
*** [06/15/2017] Th
*** [06/16/2017] F
Research SLAM.
*** [06/17/2017] S
- Weekend at Dad's
*** [06/18/2017] Su
- Weekend at Dad's

*** [06/19/2017] M
*** [06/20/2017] T
**** TODO Learn about SLAM, SIFT/SURF/ORB 
*** [06/21/2017] W
*** [06/22/2017] Th
*** [06/23/2017] F
- Toronto Pride
*** [06/24/2017] S
- Toronto Pride
*** [06/25/2017] Su
- Toronto Pride

*** [06/26/2017] M
**** TODO Read up on autoencoders and GANs
*** [06/27/2017] T
*** [06/28/2017] W
**** TODO Read papers about visualizing upper layers
*** [06/29/2017] Th
*** [06/30/2017] F
TODAY!!!!
*** [07/01/2017] S
Read:
Feature-based laser scan matching and its application for indoor mapping
A new feature-based method for robust and efficient rigid-body registration of overlapping point clouds
Point-wise saliency detection on 3D point clouds via covariance descriptors

*** [07/02/2017] Su
**** TODO Finish Dissertation Proposal

*** [07/03/2017] M
*** [07/04/2017] T
*** [07/05/2017] W
*** [07/06/2017] Th
*** [07/07/2017] F
*** [07/08/2017] S
*** [07/09/2017] Su
**** TODO Collect data for training GAN

*** [07/10/2017] M
*** [07/11/2017] T
*** [07/12/2017] W
*** [07/13/2017] Th
*** [07/14/2017] F
*** [07/15/2017] S
*** [07/16/2017] Su
**** TODO Train GAN

*** [07/17/2017] M
*** [07/18/2017] T
*** [07/19/2017] W
*** [07/20/2017] Th
*** [07/21/2017] F
*** [07/22/2017] S
*** [07/23/2017] Su

*** [07/24/2017] M
*** [07/25/2017] T
*** [07/26/2017] W
*** [07/27/2017] Th
*** [07/28/2017] F
*** [07/29/2017] S
*** [07/30/2017] Su
**** TODO Project learned features onto input space

*** [07/31/2017] M
*** [08/01/2017] T
*** [08/02/2017] W
*** [08/03/2017] Th
*** [08/04/2017] F
*** [08/05/2017] S
*** [08/06/2017] Su

*** [08/07/2017] M
*** [08/08/2017] T
*** [08/09/2017] W
*** [08/10/2017] Th
*** [08/11/2017] F
*** [08/12/2017] S
*** [08/13/2017] Su
**** TODO Use new features in SLAM algorithm

*** [08/14/2017] M
*** [08/15/2017] T
*** [08/16/2017] W
*** [08/17/2017] Th
*** [08/18/2017] F
*** [08/19/2017] S
*** [08/20/2017] Su

*** [08/21/2017] M
**** TODO Submit to ICLR (http://www.iclr.cc/)
*** [08/22/2017] T
*** [08/23/2017] W
*** [08/24/2017] Th
*** [08/25/2017] F
*** [08/26/2017] S
*** [08/27/2017] Su

*** [08/28/2017] M
*** [08/29/2017] T
*** [08/30/2017] W
*** [08/31/2017] Th
*** [09/01/2017] F
*** [09/02/2017] S
*** [09/03/2017] Su

*** [09/04/2017] M
*** [09/05/2017] T
*** [09/06/2017] W
*** [09/07/2017] Th
*** [09/08/2017] F
*** [09/09/2017] S
*** [09/10/2017] Su
**** TODO Submit to ICRA (Journal + Conference) (http://www.icra2018.org/)

*** [09/11/2017] M
*** [09/12/2017] T
*** [09/13/2017] W
*** [09/14/2017] Th
*** [09/15/2017] F
**** TODO Submit to ICRA (Conference only) (http://www.icra2018.org/)
**** TODO Submit to CVPR (http://cvpr2018.thecvf.com/)
*** [09/16/2017] S
*** [09/17/2017] Su

*** [09/18/2017] M
**** TODO Upload GNSS+ paper to AMP (https://www.ion.org/abstracts/index.cfm)
*** [09/19/2017] T
*** [09/20/2017] W
*** [09/21/2017] Th
*** [09/22/2017] F
*** [09/23/2017] S
*** [09/24/2017] Su

*** [09/25/2017] M
*** [09/26/2017] T
- Fly to Portland for GNSS+
*** [09/27/2017] W
- GNSS+
*** [09/28/2017] Th
- GNSS+
*** [09/29/2017] F
- GNSS+
*** [09/30/2017] S
*** [10/01/2017] Su
    
** Longterm
*** Submit to Navigation Journal
- Paper similar to Levinson, et al (2011) Towards Fully Autonomous Driving: Systems and Algorithms
*** Unfinished publishable projects
- SeaDog
- HyperSCAN
- Grass detection with GAN

** Tasks
*** TODO Finish Dissertation Proposal
    DEADLINE: <2017-07-02 Wed>

**** TODO Learn about SLAM, SIFT/SURF/ORB, LIDAR features/techniques
     DEADLINE: <2017-06-20 Sun>

**** TODO Read up on autoencoders and GANs
     DEADLINE: <2017-06-26 Fri>

**** TODO Read papers about visualizing upper layers
     DEADLINE: <2017-06-28 Fri>

*** TODO Collect data for training GAN
    DEADLINE: <2017-07-02 Sun>

*** TODO Train GAN
    DEADLINE: <2017-07-16 Sun>

*** TODO Project learned features onto input space
    DEADLINE: <2017-07-30 Sun>

*** TODO Use new features in SLAM algorithm
    DEADLINE: <2017-08-13 Sun>

*** TODO Submit to ICLR (Journal and Conference) (http://www.iclr.cc/)
    DEADLINE: <2017-09-10 Sun>

*** TODO Submit to ICRA (Conference only) (http://www.icra2018.org/)
    DEADLINE: <2017-09-15 Fri>

*** TODO Submit to CVPR (http://cvpr2018.thecvf.com/)
    DEADLINE: <2017-09-15 Fri>

*** TODO Upload GNSS+ paper to AMP (https://www.ion.org/abstracts/index.cfm)
    DEADLINE: <2017-09-18 Mon>


* EECS 600 Project
** DONE Create Data
   CLOSED: [2016-12-09 Fri 16:43]
   - Rewrite a minimum stageros to move blocks around and scan them with lidar
*** DONE Load a world file with a robot with a lidar.
    CLOSED: [2016-12-05 Mon 15:08]
  + Create SubscribeModels()
*** DONE Access the lidar output, write it to file.
    CLOSED: [2016-12-06 Tue 15:45]
  + This should be done in WorldCallback(), I think.
  + [X] Access the lidar output.
  + [X] Write it to a .csv file.
*** DONE Add simple block model to the simulation.
    CLOSED: [2016-12-09 Fri 15:50]
    - [X] Load minimal block in the world file.
    - [ ] Alter verticies of block through a function that is a friend of Block
    - [ ] or create a block using the constructor method. Then get rid of it.
      - create a model.
      - create a blockgroup.
      - create a block with desired vertices.
      - remove the model.
        - void Ancestor::RemoveChild(Model* mod); or Add/RemoveModel(Model *mod);
*** DONE Read from A-Z.csv and load those blocks into simulation.
    CLOSED: [2016-12-09 Fri 15:51]
    - Acutally loaded models in worldfile
*** DONE Change angle, distance, rotation, size, and noise level or blocks
    CLOSED: [2016-12-09 Fri 15:51]
    - [X] angle
    - [X] distance
    - [X] rotation
    - [X] size
    - [ ] noise level (will do in post)
      - noise added to each vertex -- angle - uniform, radius -gaussian w/ std = noise level.
      - noise can instead be added to scans, instead of actual verticies.
*** DONE Cycle through
    CLOSED: [2016-12-09 Fri 15:52]
    + [X] block type (A-Z, shapes, etc.)
    + [X] angle
      - -90 on the +y-axis, 0 on the x-axis, 90 on the -y-axis
    + [X] distance (from lidar)
    + [X] rotation (angle with respect to angle above)
    + [X] size
      - 1 = text height of 1 m. Actual text is sometimes a bit larger.
    + [ ] noise level (will do in post)
      - angle - uniform(0,180), distance - normal(0,noise level)
*** DONE At each instance in the cycle above, record a scan
    CLOSED: [2016-12-07 Wed 20:56]
*** DONE Save data to a .csv or binary file
    CLOSED: [2016-12-13 Tue 10:42]
    + Data structure: block type, size, distance, angle, rotation, noise level, [scan]
    + [X] Make shape, angle, distance, rotation, size, and noise level all member variables
      - that way they can be written to file in WorldCallback()
    + [X] Save as numpy array for use with Tensorflow
      - >> operator only writes four decimal places to file.
      - numpy can give 16+ bit precision. However, larger file.
*** TODO Cleanup
    - [ ] Make .csv file name a parameter
*** TODO Make data sets (max range 50) [2/4]
    - [X] Structured, size 1-5, r 5-25
    - [X] Structured, size 10-20, r 15,35
    - [ ] Random, size 1-5, r 5-25
    - [ ] Random, size 10-20, r 15-35
*** TODO Add noise to data?
   This can be done in python.

** TODO Write TensorFlow DCNN
*** TODO Get a network running with ranges [8/10]
    - [X] Setup tensorboard [[https://www.tensorflow.org/how_tos/summaries_and_tensorboard/][tutorial]]
    - [-] Add (Leaky?) ReLU's and Batch Norm and/or Dropout [1/4]
      - [X] ReLU
      - [ ] Leaky?
      - [ ] Batch Norm [[http://bamos.github.io/2016/08/09/deep-completion/][see this]] 
      - [ ] Dropout
    - [X] Create loss function
    - [X] Create optimizer
    - [X] normalize inputs ~N(0,1) (did I do this correctly?)
    - [X] Design architecture.
      - start with hyperface idea, but with 1D convolution.
      - used AlexNet with reduced dimensions. See hyperparameters [[file:~/ros_ws/src/lidar_dcnn/scripts/hyperlidar.py::#%20k_i%20=%20height%20of%201d%20convolution%20kernel%20in%20layer%20i][here]]
    - [X] Loop through data [2/2]
      - [X] figure out how to randomize data/targets for mini-batches
      - [X] make targets into 1-hot vectors
    - [X] Test Data
    - [X] Design network for changing batch sizes (testing uses whole set.)
    - [ ] Save variables (weights and biases)
      - figure out how to start from a specific global_step
*** TODO Use Hyperface's expanded loss function
    - Add loss for [4/6]
      + [X] block type (A-Z, shapes, etc.)
      + [X] angle
        + -90 on the +y-axis, 0 on the x-axis, 90 on the -y-axis
      + [X] distance (from lidar)
      + [ ] rotation (angle with respect to angle above)
      + [X] size
        + 1 = text height of 1 m. Actual text is sometimes a bit larger.
      + [ ] noise level (will do in post)
        + angle - uniform(0,180), distance - normal(0,noise level)
*** TODO Figure out how to preprocess data
    - angles with first point being distance?


* Obstacle avoidance
- Read current linear and angluar speed command
- Read lidar scan.
- Limit `Obstacles' list to points in a localized area.
- Determine the path of least deviation that misses all the obstacles
-- To the left of the left-most obstacle or to the right of the right-most obstacle.
- velocity command should be published upon the receipt of a velocity_pre command, using the latest lidar data.
* TODO DEBUG - Curvatures to Left and Right are the same!


* Useful Commands
** -TODO items
C-shift-RET -- Make new TODO item
C-c C-t -- Mark TODO item as done with timestamp
** Expand/contract
shift-TAB -- cycle through heading expansion levels
** Links
[[url][description] -- add one more right bracket to make a link
ex: [[http://matthewkle.in/][My website!]]
C-c C-o -- open link
C-c l -- org-store-link
C-c C-l -- org-insert-link
ex: [[file:~/.emacs.d/init.el::(require%20'package)][My emacs init file.]]
** Checkboxes
C-c C-c -- toggle checkbox
